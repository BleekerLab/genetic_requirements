volatiles %>% filter(., group == "F2") %>%
ggplot(., aes(x = zingiberene))+
stat_bin(binwidth = 100000, colour = "black", fill = "black") +
#facet_grid(~group) +
xlim(100000,2500000)+
my.theme  + theme(legend.position = "none", axis.title.y = element_blank(), axis.title.x = element_blank())
volatiles %>% filter(., group == "F2") %>%
ggplot(., aes(x = zingiberene))+
stat_bin(binwidth = 100000, colour = "black", fill = "black") +
#facet_grid(~group) +
xlim(100000,2000000)+
my.theme  + theme(legend.position = "none", axis.title.y = element_blank(), axis.title.x = element_blank())
volatiles %>% filter(., group == "F2") %>%
ggplot(., aes(x = zingiberene))+
stat_bin(binwidth = 100000, colour = "black", fill = "black") +
#facet_grid(~group) +
xlim(100000,2500000)+
my.theme  + theme(legend.position = "none", axis.title.y = element_blank(), axis.title.x = element_blank())
volatiles %>% filter(., group == "F2") %>%
ggplot(., aes(x = zingiberene))+
stat_bin(binwidth = 100000, colour = "black", fill = "black") +
#facet_grid(~group) +
xlim(100000,2500000)+
ylim(0,10)+
my.theme  + theme(legend.position = "none", axis.title.y = element_blank(), axis.title.x = element_blank())
p.F2.insert =
volatiles %>% filter(., group == "F2") %>%
ggplot(., aes(x = zingiberene))+
stat_bin(binwidth = 100000, colour = "black", fill = "black") +
#facet_grid(~group) +
xlim(100000,2500000)+
ylim(0,10)+
my.theme  + theme(legend.position = "none", axis.title.y = element_blank(), axis.title.x = element_blank())
ggsave("Figure_2/F2-insert.pdf", plot = p.F2.insert, height = 1, width = 2)
volatiles %>% filter(., group == "F2") %>%
ggplot(., aes(x = zingiberene))+
stat_bin(binwidth = 100000, colour = "black", fill = "black") +
#facet_grid(~group) +
xlim(100000,2500000)+
ylim(0,10)+
theme(text = element_text(),
axis.text.x = element_text(size = 6, colour = "black"),
axis.text.y = element_text(size = 4, colour = "black"),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(),
panel.background = element_rect(fill = NA, color = "black"),
strip.text.x = element_text(size=8, colour = "black")
)+
theme_bw()+
theme(legend.position = "none", axis.title.y = element_blank(), axis.title.x = element_blank())
p.F2.insert =
volatiles %>% filter(., group == "F2") %>%
ggplot(., aes(x = zingiberene))+
stat_bin(binwidth = 100000, colour = "black", fill = "black") +
#facet_grid(~group) +
xlim(100000,2500000)+
ylim(0,10)+
theme(text = element_text(),
axis.text.x = element_text(size = 6, colour = "black"),
axis.text.y = element_text(size = 4, colour = "black"),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(),
panel.background = element_rect(fill = NA, color = "black"),
strip.text.x = element_text(size=8, colour = "black")
)+
theme_bw()+
theme(legend.position = "none", axis.title.y = element_blank(), axis.title.x = element_blank())
ggsave("Figure_2/F2-insert.pdf", plot = p.F2.insert, height = 1, width = 2)
library(ggbiplot)
library(Rmisc)
library(multcompView)
df <- read.delim("Figure_1_F1_phenotypes/20170425_F1s leaf washes_peak area.txt", header = T, sep = "\t", dec = ".")
df$total_terpenes = rowSums(df[,3:ncol(df)]) #make a new column and calculate total terpene ion counts
#Change to long ('tidy') format -> filter unwanted data (e.g. the LA1777-F1 measurements)
df_long <- gather(df, metabolite, abundance, Bpinene:total_terpenes, -genotype,-genotype,factor_key=TRUE) %>%
filter(., genotype != "CV_LA1777") %>% filter(., genotype != "F1_LA1777")
df_long$genotype <- factor(df_long$genotype, levels = c("CV", "F1", "PI127826",  "F1_hab", "LA1777"),
ordered = TRUE)
sum = summarySE(df_long, measurevar = "abundance", groupvars = c("genotype", "metabolite"))
sum %>% filter(., metabolite %in% c("total_terpenes", "X7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my_theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
sum %>% filter(., metabolite %in% c("total_terpenes", "X7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my.theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
df <- read.delim("Figure_1_F1_phenotypes/20170425_F1s leaf washes_peak area.txt", header = T, sep = "\t", dec = ".", check.names = F)
df$total_terpenes = rowSums(df[,3:ncol(df)]) #make a new column and calculate total terpene ion counts
#Change to long ('tidy') format -> filter unwanted data (e.g. the LA1777-F1 measurements)
df_long <- gather(df, metabolite, abundance, Bpinene:total_terpenes, -genotype,-genotype,factor_key=TRUE) %>%
filter(., genotype != "CV_LA1777") %>% filter(., genotype != "F1_LA1777")
#Define variables
df_long$genotype <- factor(df_long$genotype, levels = c("CV", "F1", "PI127826",  "F1_hab", "LA1777"),
ordered = TRUE)
#summarise data for barplot
sum = summarySE(df_long, measurevar = "abundance", groupvars = c("genotype", "metabolite"))
sum %>% filter(., metabolite %in% c("total_terpenes", "X7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my.theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
sum %>% filter(., metabolite %in% c("total_terpenes", "7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my.theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
p.leafwash =
sum %>% filter(., metabolite %in% c("total_terpenes", "7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my.theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
ggsave("Figure_1_F1_phenotypes/plots/F1_leafwashes_barplot.pdf", plot = p.leafwash, width = 5, height = 3)
ggsave("Figure_1_F1_phenotypes/plots/F1_leafwashes_barplot.pdf", plot = p.leafwash, width = 6, height = 4)
my.theme =
theme(text = element_text(),
axis.text.x = element_text(size = 8, colour = "black", angle = 45),
axis.text.y = element_text(size = 8, colour = "black"),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(),
panel.background = element_rect(fill = NA, color = "black"),
strip.text.x = element_text(size=8, colour = "black")
)+
theme_bw()
sum %>% filter(., metabolite %in% c("total_terpenes", "7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my.theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
my.theme =
theme(text = element_text(),
axis.text.x = element_text(size = 8, colour = "black", angle = 45, hjust = 0.5),
axis.text.y = element_text(size = 8, colour = "black"),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(),
panel.background = element_rect(fill = NA, color = "black"),
strip.text.x = element_text(size=8, colour = "black")
)+
theme_bw()
sum %>% filter(., metabolite %in% c("total_terpenes", "7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my.theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
my.theme =
theme(text = element_text(),
axis.text.x = element_text(size = 8, colour = "black", angle = 45, hjust = 0.1),
axis.text.y = element_text(size = 8, colour = "black"),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(),
panel.background = element_rect(fill = NA, color = "black"),
strip.text.x = element_text(size=8, colour = "black")
)+
theme_bw()
sum %>% filter(., metabolite %in% c("total_terpenes", "7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my.theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
my.theme =
theme(text = element_text(),
axis.text.x = element_text(size = 8, colour = "black", angle = 45, hjust = 1.5),
axis.text.y = element_text(size = 8, colour = "black"),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(),
panel.background = element_rect(fill = NA, color = "black"),
strip.text.x = element_text(size=8, colour = "black")
)+
theme_bw()
sum %>% filter(., metabolite %in% c("total_terpenes", "7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my.theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
my.theme =
theme(text = element_text(),
axis.text.x = element_text(size = 8, colour = "black", angle = 45, hjust = 1),
axis.text.y = element_text(size = 8, colour = "black"),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(),
panel.background = element_rect(fill = NA, color = "black"),
strip.text.x = element_text(size=8, colour = "black")
)+
theme_bw()
sum %>% filter(., metabolite %in% c("total_terpenes", "7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my.theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
my.theme =
theme(text = element_text(),
axis.text.x = element_text(size = 8, colour = "black", angle = 30, hjust = 1),
axis.text.y = element_text(size = 8, colour = "black"),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(),
panel.background = element_rect(fill = NA, color = "black"),
strip.text.x = element_text(size=8, colour = "black")
)+
theme_bw()
sum %>% filter(., metabolite %in% c("total_terpenes", "7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my.theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
my.theme =
theme(text = element_text(),
axis.text.x = element_text(size = 8, colour = "black", angle = 30, hjust = 1.2),
axis.text.y = element_text(size = 8, colour = "black"),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(),
panel.background = element_rect(fill = NA, color = "black"),
strip.text.x = element_text(size=8, colour = "black")
)+
theme_bw()
sum %>% filter(., metabolite %in% c("total_terpenes", "7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my.theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
my.theme =
theme(text = element_text(),
axis.text.x = element_text(size = 8, colour = "black", angle = 30, hjust = 1),
axis.text.y = element_text(size = 8, colour = "black"),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(),
panel.background = element_rect(fill = NA, color = "black"),
strip.text.x = element_text(size=8, colour = "black")
)+
theme_bw()
sum %>% filter(., metabolite %in% c("total_terpenes", "7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my.theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
p.leafwash =
sum %>% filter(., metabolite %in% c("total_terpenes", "7epizingiberene")) %>%
ggplot(., aes(x = genotype, y = abundance)) +
geom_bar(stat = "identity", color = "black", fill = "black") +
geom_errorbar(aes(x = genotype, ymin=abundance-se, ymax=abundance+se), width=.2) +
my.theme +
facet_grid(~metabolite)+
ylab("Metabolite abundance (ion counts / mg fresh leaf)")+
xlab(NULL)
ggsave("Figure_1_F1_phenotypes/plots/F1_leafwashes_barplot.pdf", plot = p.leafwash, width = 6, height = 4)
library(car)
library(rcompanion)
df = read.csv(file = "Figure_1_F1_phenotypes/F1_trichomes_densitites_CSV.csv", header = T, stringsAsFactors = T)
str(df)
df$leafdisc = as.factor(df$leafdisc)
# Make data tidy
df =
gather(data = df,
key = "type",
value = "density_mm2",
-genotype, - plant, -surface, -leafdisc, - date, -person)
df.mean.leafdisc = as.data.frame(df %>% dplyr::group_by(genotype, plant, surface, type) %>% dplyr::summarise(density_mm2 = mean(density_mm2)))
# Summarise over the genotypes
sum = summarySE(df.mean.leafdisc, measurevar = "density_mm2", groupvars = c("genotype", "surface", "type"))
sum$genotype = factor(sum$genotype,
levels = c("Cultivar","F1", "PI127826",  "PI127826 x LA1777", "LA1777"),
ordered = TRUE)
sum  %>% filter(type == "type_VI") %>%
ggplot(., aes(x = genotype,
y = density_mm2)) +
geom_bar(aes(x = genotype, y = density_mm2), stat = "identity", fill = "black")+
geom_errorbar(aes(x = genotype, ymin = density_mm2 - se, ymax = density_mm2+se), width = 0.2)+
facet_grid(~surface, scale = "free")+
my.theme +
labs(x = NULL,
y = "Leaf-trichome desity (trichomes/mm2)")
p.type_VI =
sum  %>% filter(type == "type_VI") %>%
ggplot(., aes(x = genotype,
y = density_mm2)) +
geom_bar(aes(x = genotype, y = density_mm2), stat = "identity", fill = "black")+
geom_errorbar(aes(x = genotype, ymin = density_mm2 - se, ymax = density_mm2+se), width = 0.2)+
facet_grid(~surface, scale = "free")+
my.theme +
labs(x = NULL,
y = "Leaf-trichome desity (trichomes/mm2)")
ggsave(file = "Figure_1_F1_phenotypes/plots/type_VI_densities_F1.pdf", plot = p.type_VI, height = 6, width = 4)
ggsave(file = "Figure_1_F1_phenotypes/plots/type_VI_densities_F1.pdf", plot = p.type_VI, height = 4, width = 6)
ggsave(file = "Figure_1_F1_phenotypes/plots/type_VI_densities_F1.pdf", plot = p.type_VI, height = 2, width = 3)
ggsave(file = "Figure_1_F1_phenotypes/plots/type_VI_densities_F1.pdf", plot = p.type_VI, height = 3, width = 4)
ggsave("Figure_1_F1_phenotypes/plots/F1_leafwashes_barplot.pdf", plot = p.leafwash, width = 4, height = 3)
ggsave("Figure_1_F1_phenotypes/plots/F1_leafwashes_barplot.pdf", plot = p.leafwash, width = 9, height = 5.5, units = "cm")
ggsave(file = "Figure_1_F1_phenotypes/plots/type_VI_densities_F1.pdf", plot = p.type_VI, width = 9, height = 5.5, units = "cm")
library(multcompView)
my.theme =
theme(text = element_text(),
axis.text.x = element_text(size = 8, colour = "black"),
axis.text.y = element_text(size = 8, colour = "black"),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(),
panel.background = element_rect(fill = NA, color = "black"),
strip.text.x = element_text(size=8, colour = "black")
)+
theme_bw()
#############
# Load data #
#############
trichomes = read.csv(file= "Figure_2/type_VI_trichomes_full_F2.csv", header = T, stringsAsFactors = T)
volatiles = read.csv(file = "Figure_2/GCMS_Leafwash_Full_F2_EZ_clean_data.csv", header = T, stringsAsFactors = T, check.names = F)
homo = read.csv(file = "Figure_2/homozygous_ZGB_genotypes_F2.csv", header = T, stringsAsFactors = T)
volatiles_VI = read.csv(file = "Figure_2/type_VI_gland_terpenes_F2.csv", header = T, stringsAsFactors = T, check.names = F)
# Take only the volatile data from plants homozygous for zFPS/ZIS + P450
volatiles.homo = left_join(homo, volatiles, by = "genotype")
volatiles.homo = volatiles.homo[complete.cases(volatiles.homo), ] # Remove rows with NA values
volatiles.parents = volatiles %>% filter(., group != "F2") #subset parents from original data
volatiles = full_join(volatiles.homo, volatiles.parents) # join homozygous F2 plants with parents
# Include the trichome couting data
df = inner_join(volatiles, trichomes)
df$genotype = as.factor(df$genotype)
acylsugars = trichomes = read.csv(file= "Figure_2/20170408_Corrected emission all.csv", header = T, stringsAsFactors = T)
type_VI_ab_ad = df %>% dplyr::group_by(genotype) %>% dplyr::summarise(., sum_type_VI = sum(type_VI))
type_VI_ab_ad = inner_join(type_VI_ab_ad, volatiles)
df2 = type_VI_ab_ad %>% filter(., !sum_type_VI %in% c("11","12", "13", "14")) # remove mistakes in trichome counting (i.e. a class can not exceed 10)
ggplot(df2, aes(x = df2$sum_type_VI, y = df2$zingiberene))+
geom_boxplot(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene), fill = "grey", outlier.size = 0.5)+
geom_point(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene),size = 0.5)+
ylim(NA, 500000)+
xlab(NULL)+
ylab("7-epizingiberene (ion counts / leaflet")+
xlab("Type-VI trichome-density class")+
my.theme
ggplot(df2, aes(x = df2$sum_type_VI, y = df2$zingiberene))+
geom_boxplot(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene), fill = "grey", outlier.size = 0.5)+
geom_point(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene),size = 0.5)+
geom_jitter(data = df.parsed, aes(x = na.omit(sum_type_VI)-1, y = zingiberene.y), color = "red", width = .05)+
ylim(0,500000)+
xlab(NULL)+
ylab("7-epizingiberene (ion counts / leaflet)")+
xlab("Type-VI trichome-density class")+
my.theme
aov_class = aov(log(df2$zingiberene) ~ as.factor(df2$sum_type_VI))
summary(aov_class)
TK = TukeyHSD(aov_class)
significant_groups = multcompLetters(TK$`as.factor(df2$sum_type_VI)`[,4])
volatiles %>% dplyr::group_by(., genotype, group) %>% dplyr::summarise(., mean_zingiberene = mean(zingiberene)) %>% filter(genotype != "14830-144") %>%
ggplot(., aes(x = reorder(genotype, -mean_zingiberene),
y = mean_zingiberene, fill= group))+
geom_bar(stat = "identity")+
theme_bw()+
theme(text = element_text(),
axis.text.x = element_text(size = 3, angle = 90, colour = "black"))
ggplot(data = df2, aes(scale(log(df2$zingiberene+1))))+
stat_bin(binwidth = .2, colour = "grey")+
#geom_freqpoly(binwidth = 0.2, colour = "red")+
theme_bw()+
#xlim(-3.5, 3.5)+
xlab("7-epizingiberene / leaflet (log-scaled ion counts)")+
ylab("Frequence amongst F2 progeny")+
my.theme
volatiles.long = gather(volatiles,
key = "metabolite",
value = "value",
-sample, -genotype, -group)
volatiles.long$metabolite = factor(volatiles.long$metabolite, levels = c("B_phellandrene", "carene", "caryophyllene", "elemene", "ocymene", "pinene", "zingiberene", "zingiberenol", "epoxy-zingiberenol",
ordered = TRUE))
ggplot(volatiles.long)+
geom_bar(stat = "identity", aes(x = reorder(genotype, -value,sum), y = value, fill = metabolite))+
scale_fill_manual(values = c("grey", "grey","grey", "grey","grey", "grey","black", "black","black"))+
my.theme +
ylab("Summed volatiles (ion counts / leaflet)")+
xlab("F2 progeny")
ggplot(volatiles.long)+
geom_bar(stat = "identity", aes(x = reorder(genotype, -value,sum), y = value, fill = metabolite))+
scale_fill_manual(values = c("grey", "grey","grey", "grey","grey", "grey","black", "black","black"))+
my.theme +
ylab("Summed volatiles (ion counts / leaflet)")+
xlab("F2 progeny")
ggplot(df2, aes(x = df2$sum_type_VI, y = df2$zingiberene))+
#geom_boxplot(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene), fill = "grey", outlier.size = 0.5)+
geom_point(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene),size = 0.5)+
ylim(NA, 500000)+
xlab(NULL)+
ylab("7-epizingiberene (ion counts / leaflet")+
xlab("Type-VI trichome-density class")+
my.theme
ggplot(df2, aes(x = df2$sum_type_VI, y = df2$zingiberene))+
#geom_boxplot(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene), fill = "grey", outlier.size = 0.5)+
geom_point(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene),size = 0.5)+
geom_smooth(method = "lm", formula = y~x)+
ylim(NA, 500000)+
xlab(NULL)+
ylab("7-epizingiberene (ion counts / leaflet")+
xlab("Type-VI trichome-density class")+
my.theme
ggplot(df2, aes(x = df2$sum_type_VI, y = df2$zingiberene))+
#geom_boxplot(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene), fill = "grey", outlier.size = 0.5)+
geom_point(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene),size = 0.5)+
geom_smooth(method = "lm")+
ylim(NA, 500000)+
xlab(NULL)+
ylab("7-epizingiberene (ion counts / leaflet")+
xlab("Type-VI trichome-density class")+
my.theme
ggplot(df2, aes(x = df2$sum_type_VI, y = df2$zingiberene))+
#geom_boxplot(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene), fill = "grey", outlier.size = 0.5)+
geom_point(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene),size = 0.5)+
geom_smooth(method = "lm")+
#ylim(NA, 500000)+
xlab(NULL)+
ylab("7-epizingiberene (ion counts / leaflet")+
xlab("Type-VI trichome-density class")+
my.theme
p.box =
ggplot(df2, aes(x = df2$sum_type_VI, y = df2$zingiberene))+
#geom_boxplot(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene), fill = "grey", outlier.size = 0.5)+
geom_point(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene),size = 0.5)+
geom_smooth(method = "lm")+
ylim(NA, 500000)+
xlab(NULL)+
ylab("7-epizingiberene (ion counts / leaflet")+
xlab("Type-VI trichome-density class")+
my.theme
ggplot(df2, aes(x = df2$sum_type_VI, y = df2$zingiberene))+
#geom_boxplot(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene), fill = "grey", outlier.size = 0.5)+
geom_point(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene),size = 0.5)+
geom_smooth(method = "lm")+
ylim(NA, 100000)+
xlab(NULL)+
ylab("7-epizingiberene (ion counts / leaflet")+
xlab("Type-VI trichome-density class")+
my.theme
model= polr(zingiberene~sum_type_VI, data = df2, Hess = TRUE)
model= polr(formula = zingiberene~sum_type_VI, data = df2, Hess = TRUE)
model= polyr(formula = zingiberene~sum_type_VI, data = df2, Hess = TRUE)
model= poly(formula = zingiberene~sum_type_VI, data = df2, Hess = TRUE)
model= polym(formula = zingiberene~sum_type_VI, data = df2, Hess = TRUE)
ggplot(df2, aes(x = df2$sum_type_VI, y = df2$zingiberene))+
#geom_boxplot(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene), fill = "grey", outlier.size = 0.5)+
geom_jitter(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene),size = 0.5)+
geom_smooth(method = "lm")+
ylim(NA, 100000)+
xlab(NULL)+
ylab("7-epizingiberene (ion counts / leaflet")+
xlab("Type-VI trichome-density class")+
my.theme
ggplot(df2, aes(x = df2$sum_type_VI, y = df2$zingiberene))+
#geom_boxplot(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene), fill = "grey", outlier.size = 0.5)+
geom_jitter(aes(x = as.factor(df2$sum_type_VI), y = df2$zingiberene),size = 0.5)+
#geom_smooth(method = "lm")+
ylim(NA, 100000)+
xlab(NULL)+
ylab("7-epizingiberene (ion counts / leaflet")+
xlab("Type-VI trichome-density class")+
my.theme
