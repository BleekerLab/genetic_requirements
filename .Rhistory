library(ggplot2)
library(tidyverse)
library(Rmisc)
df <- read.csv(file = "Figure_5/20190115_relative_values_percentage_to_control.csv", header = TRUE)
df$day = as.factor(df$day)
df[is.na(df)] = 0
head(df)
str(df)
#Make data tidy
df.long = gather(
data = df,
key = "metabolite",
value = level,
-sample, -genotype, -phenotype, -treatment,-day)
head(df.long)
df.long$metabolite = as.factor(df.long$metabolite)
df.long$level = as.numeric(df.long$level)
df.long$genotype = factor(df.long$genotype,
levels = c("PI127826", "73", "CV", "411"),
ordered = TRUE)
df.long %>% filter(.,
df.long$metabolite %in% c("total_MVA_terpenes", "total_MEP_terpenes") &
df.long$day == "14")
df.sum = summarySE(df.long,
measurevar = "level",
groupvars = c("genotype", "treatment", "day", "metabolite", "phenotype"))
View(df.sum)
df.long = gather(
data = df,
key = "metabolite",
value = percentage,
-sample, -genotype, -phenotype, -treatment,-day)
head(df.long)
df.long$metabolite = as.factor(df.long$metabolite)
df.long$percentage = as.numeric(df.long$percentage)
df.long$genotype = factor(df.long$genotype,
levels = c("PI127826", "73", "CV", "411"),
ordered = TRUE)
df.sum = summarySE(df.long,
measurevar = "percentage",
groupvars = c("genotype", "treatment", "day", "metabolite", "phenotype"))
View(df.sum)
df.subset = df.sum %>% filter(.,
df.long$metabolite %in% c("total_MVA_terpenes", "total_MEP_terpenes") &
df.long$day == "14")
df.subset = df.sum %>% filter(.,
df.sum$metabolite %in% c("total_MVA_terpenes", "total_MEP_terpenes") &
df.sum$day == "14")
ggplot(df.subset, aes(x = treatment, y = percentage, fill = phenotype))+
geom_bar()+
facet_wrap(~genotype)
ggplot(df.subset, aes(x = treatment, y = percentage, fill = phenotype))+
geom_bar(stat = "identity")+
facet_wrap(~genotype)
ggplot(df.subset, aes(x = treatment, y = percentage, fill = phenotype))+
geom_bar(stat = "identity")+
facet_wrap(metabolite~genotype)
ggplot(df.subset, aes(x = treatment, y = percentage, fill = phenotype))+
geom_bar(stat = "identity")+
facet_grid(metabolite~genotype)
ggplot(df.subset, aes(x = treatment, y = percentage, fill = phenotype))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymax = percentage + se, ymin= percentage - se))+
facet_grid(metabolite~genotype)
ggplot(df.subset, aes(x = treatment, y = percentage, fill = phenotype))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymax = percentage + se, ymin= percentage - se), width = 0.2)+
facet_grid(metabolite~genotype)
ggplot(df.subset, aes(x = treatment, y = percentage, fill = phenotype))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymax = percentage + se, ymin= percentage - se), width = 0.2)+
facet_grid(metabolite~genotype)+
theme_bw()
ggsave("Figure_5/MVA_MEP_terpenes_day14_percentages.pdf", plot = p.percentage, width = 7, height = 14)
p.percentage =
ggplot(df.subset, aes(x = treatment, y = percentage, fill = phenotype))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymax = percentage + se, ymin= percentage - se), width = 0.2)+
facet_grid(metabolite~genotype)+
theme_bw()
ggsave("Figure_5/MVA_MEP_terpenes_day14_percentages.pdf", plot = p.percentage, width = 7, height = 14)
ggsave("Figure_5/MVA_MEP_terpenes_day14_percentages.pdf", plot = p.percentage, width = 7, height = 9)
ggsave("Figure_5/MVA_MEP_terpenes_day14_percentages.pdf", plot = p.percentage, width = 9, height = 9)
p.percentage =
ggplot(df.subset, aes(x = treatment, y = percentage, fill = phenotype))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymax = percentage + se, ymin= percentage - se), width = 0.2)+
facet_grid(metabolite~genotype)+
labs(x = "treatment", y = "Terpene levels combared to control (%)")
theme_bw()
p.percentage =
ggplot(df.subset, aes(x = treatment, y = percentage, fill = phenotype))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymax = percentage + se, ymin= percentage - se), width = 0.2)+
facet_grid(metabolite~genotype)+
labs(x = "treatment", y = "Terpene levels combared to control (%)")+
theme_bw()
ggsave("Figure_5/MVA_MEP_terpenes_day14_percentages.pdf", plot = p.percentage, width = 9, height = 9)
p.percentage =
ggplot(df.subset, aes(x = treatment, y = percentage, fill = phenotype))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymax = percentage + se, ymin= percentage - se), width = 0.2)+
facet_grid(metabolite~genotype)+
labs(x = "Inhibitor", y = "Terpene levels compared to control (%)")+
theme_bw()
p.percentage =
ggplot(df.subset, aes(x = treatment, y = percentage, fill = phenotype))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymax = percentage + se, ymin= percentage - se), width = 0.2)+
facet_grid(metabolite~genotype)+
labs(x = "Inhibitor", y = "Terpene levels compared to control (%)")+
theme_bw()
ggsave("Figure_5/MVA_MEP_terpenes_day14_percentages.pdf", plot = p.percentage, width = 9, height = 9)
library(tidyverse)
library(RColorBrewer)
library(multcompView)
library(Rmisc)
install.packages("multcompView")
volatiles_VI = read.csv(file = "Figure_2/type_VI_gland_terpenes_F2.csv", header = T, stringsAsFactors = T, check.names = F) %>% filter(., !genotype %in% c("LA1777", "PI127826xLA1777", "LA1777_F1", "CV_LA1777"))
trichomes = read.csv(file = "Figure_3/trichome_density_F2_selection.csv", header = T, stringsAsFactors = T, check.names = F)
zingi.scaled = approxfun(density(scale(log(volatiles_VI$total_volatiles+1))))
plot(vol.log, xlim = c(-1.5,4.5), xlab = "scaled zingiberene content / type-VI trichome", ylab = "proportion of the F2 population")
vol.log = approxfun(density((log(volatiles_VI$total_volatiles+1))))
plot(vol.log, xlim = c(-1.5,4.5), xlab = "scaled zingiberene content / type-VI trichome", ylab = "proportion of the F2 population")
#Calculate the area's of the function: integrate(funtion, xmin, xmax)
integrate(zingi.scaled, -2.6,0.91)
plot(zingi.scaled, xlim = c(-1.5,4.5), xlab = "scaled zingiberene content / type-VI trichome", ylab = "proportion of the F2 population")
plot(zingi.scaled, xlim = c(-2.5,4.5), xlab = "scaled zingiberene content / type-VI trichome", ylab = "proportion of the F2 population")
abline(v = 0.91) # mean PI127826
#Calculate the area's of the function: integrate(funtion, xmin, xmax)
integrate(zingi.scaled, -2.6,0.5)
abline(v = 0.5) # mean PI127826
df = read.csv("Figure_3/Leafwash vs Trichome density.csv",header = TRUE, stringsAsFactors = T, check.names = FALSE)
#Change to long ('tidy') format. First the volatiles (df.long) and than also the trichomes (df.long2)
df.long = gather(
data = df,
key = "metabolite",
value = level,
-sample, -group, -Type_VI_mm2_Abaxial,-Type_VI_mm2_Adaxial,-Type_VI_mm)
df.long2 = gather(
data = df.long,
key = "trichome_position",
value = density,
-sample,-metabolite,-group,-level)
df.parsed = df.long2 %>% filter(., df.long2$metabolite == "total_volatiles" & df.long2$trichome_position == "Type_VI_mm") %>% filter(., !sample == "250")
df.parsed$metabolite = as.factor(df.parsed$metabolite)
df.parsed$trichome_position = as.factor(df.parsed$trichome_position)
model  = lm(data = df.parsed, level ~ density)
summary(model)
model  = lm(data = df.parsed, level ~ density)
summary(model)
model  = lm(data = df.parsed, level ~ density)
summary(model)
# linear model fitting the summed terpenes to the density of trichomes
model  = lm(data = df.parsed, level ~ density)
df.parsed = df.long2 %>% filter(., df.long2$metabolite == "total_volatiles" & df.long2$trichome_position == "Type_VI_mm") %>% filter(., !sample == "250")
df.parsed$metabolite = as.factor(df.parsed$metabolite)
df.parsed$trichome_position = as.factor(df.parsed$trichome_position)
library(tidyverse)
df.parsed = df.long2 %>% filter(., df.long2$metabolite == "total_volatiles" & df.long2$trichome_position == "Type_VI_mm") %>% filter(., !sample == "250")
df.parsed$metabolite = as.factor(df.parsed$metabolite)
df.parsed$trichome_position = as.factor(df.parsed$trichome_position)
#Filter datafile on total_volatiles and type_VI_trichomes both abaxial and adaxial
df.parsed = df.long2 %>% filter(., df.long2$metabolite == "total_volatiles" & df.long2$trichome_position == "Type_VI_mm") %>% filter(., !sample == "250")
df.long = gather(
data = df,
key = "metabolite",
value = level,
-sample, -group, -Type_VI_mm2_Abaxial,-Type_VI_mm2_Adaxial,-Type_VI_mm)
df.long2 = gather(
data = df.long,
key = "trichome_position",
value = density,
-sample,-metabolite,-group,-level)
df.parsed = df.long2 %>% filter(., df.long2$metabolite == "total_volatiles" & df.long2$trichome_position == "Type_VI_mm") %>% filter(., !sample == "250")
df.parsed$metabolite = as.factor(df.parsed$metabolite)
df.parsed$trichome_position = as.factor(df.parsed$trichome_position)
model  = lm(data = df.parsed, level ~ density)
summary(model)
